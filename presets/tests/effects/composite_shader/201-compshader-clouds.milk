; Complex Composite Shader Effect
; Renders noise-based clouds with moving RGB point lights and bump mapping.
; Uses different HLSL intrinsics and custom functions.
MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=0.952
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=2.103
fWaveSmoothing=0.540
fWaveParam=0.380
fModWaveAlphaStart=0.810
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.015
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.04505
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.100
wavecode_1_enabled=0
wavecode_1_samples=100
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.100
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.100
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=16
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=3
shapecode_0_x=0.730
shapecode_0_y=0.500
shapecode_0_rad=0.29466
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.87511
shapecode_0_r=0.700
shapecode_0_g=0.700
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=trig = q25;
shape_0_per_frame2=a = trig*.8; a2 = 0;
shape_0_per_frame3=
shape_0_per_frame4=x0 = x0 *bnot(trig) + trig*rand(100)/100;
shape_0_per_frame5=y0 = y0 *bnot(trig) + trig*rand(100)/100;
shape_0_per_frame6=tex_ang = rand(20);
shape_0_per_frame7=rad = .1+rand(10)/8;
shape_0_per_frame8=
shape_0_per_frame9=x = x0; y = y0;
shape_0_per_frame10=r = .7+.3*sin(time/12);
shape_0_per_frame11=b = .7+.3*sin(time/15);
shape_0_per_frame12=g = .7+.3*sin(time/8);
shape_0_per_frame13=r2 = r; b2 = b; g2 = g;
shapecode_1_enabled=1
shapecode_1_sides=36
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=4
shapecode_1_x=0.300
shapecode_1_y=0.500
shapecode_1_rad=0.05429
shapecode_1_ang=1.25664
shapecode_1_tex_ang=0.37699
shapecode_1_tex_zoom=1.02841
shapecode_1_r=1.000
shapecode_1_g=0.700
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.590
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = q31; y = q32;
shape_1_per_frame2=rad = .06;
shape_1_per_frame3=tex_ang = time;
shape_1_per_frame4=a = q30;
shapecode_2_enabled=0
shapecode_2_sides=63
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.123
shapecode_2_y=0.000
shapecode_2_rad=0.27319
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.49981
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.500
shapecode_2_border_g=0.500
shapecode_2_border_b=0.500
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=24
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.700
shapecode_3_y=0.510
shapecode_3_rad=0.19869
shapecode_3_ang=0.00000
shapecode_3_tex_ang=1.00531
shapecode_3_tex_zoom=0.49981
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=0.990
shapecode_3_a=0.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.500
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
per_frame_init_1=t0a = time; t0 = time+.5;
per_frame_init_2=spb_ = .5; ;
per_frame_init_3=volb = .5; volx = .5;
per_frame_init_4=vol_= 1; index = 0; mov1 = 0;
per_frame_init_5=sdev = .1; wamp_ = .1;
per_frame_init_6=
per_frame_1=dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);
per_frame_2=vol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;
per_frame_3=
per_frame_4=is_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);
per_frame_5=t0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);
per_frame_6=peak = if(is_beat,vol,peak*dec_med);
per_frame_7=index = (index + is_beat) %128;
per_frame_8=
per_frame_9=spb = min(t0-t0a + .01,2);
per_frame_10=spb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);
per_frame_11=
per_frame_12=
per_frame_13=q20 = vol_;
per_frame_14=q21 = above(vol,2.7*vol_);
per_frame_15=q22 = max(0,peak-.0)+.01;
per_frame_16=hpeak = hpeak*dec_med + (1-dec_med)*q21;
per_frame_17=q23 = hpeak * (1+rand(8));
per_frame_18=q24 = is_beat;
per_frame_19=q25 = q22*(1+rand(8))/8;
per_frame_20=
per_frame_21=mindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));
per_frame_22=sdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);
per_frame_23=
per_frame_24=speed = 1/fps/spb_;
per_frame_25=trel = trel + speed;
per_frame_26=q10 = trel;
per_frame_27=
per_frame_28=wamp =  min(.001/sdev,.15);
per_frame_29=wamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;
per_frame_30=q11 = sin(trel/2)*wamp_;
per_frame_31=q12 = wamp_/2;
per_frame_32=
per_frame_33=rota = 2*wamp_*sin(trel/3);
per_frame_34=//rota = .2*sin(wamp_*32);
per_frame_35=q5 = cos(rota);
per_frame_36=q6 = sin(rota);
per_frame_37=q7 = -q6;
per_frame_38=q8 = q5;
per_frame_39=
per_frame_40=q15 = -sin(trel*.5)*.05;
per_frame_41=q16 = cos(trel)*wamp_/2;
per_frame_42=
per_frame_43=q19 = .1*sin(trel/12);
per_frame_44=
per_frame_45=//ODD PLANET MOVEMENT
per_frame_46=trig1 = bnot(vis)*bnot(rand(100*fps));
per_frame_47=vis = if (trig1,1,vis*below(mov1,1));
per_frame_48=q30 = vis;
per_frame_49=mov1 = if (vis,mov1+2*speed/fps,-1);
per_frame_50=dir = if(trig1,rand(100),dir);
per_frame_51=q31 = .5+.5*cos(dir)*mov1;
per_frame_52=q32 = .5+.5*sin(dir)*mov1;
per_frame_53=
per_frame_54=q29 = (2+sin(time/17)); //reflection water
per_frame_55=
per_frame_56=monitor = wamp;
per_pixel_1=zoom = 1+.02*rad*q20;
per_pixel_2=dy = -.00;
per_pixel_3=warp =.1; dx = .0;
comp_1=`// Cloudy!
comp_2=`
comp_3=`float3 mod289(float3 x) {
comp_4=`  return x - floor(x * (1.0 / 289.0)) * 289.0;
comp_5=`}
comp_6=`
comp_7=`float4 mod289(float4 x) {
comp_8=`  return x - floor(x * (1.0 / 289.0)) * 289.0;
comp_9=`}
comp_10=`
comp_11=`float4 permute(float4 x) {
comp_12=`     return mod289(((x*34.0)+1.0)*x);
comp_13=`}
comp_14=`
comp_15=`float4 taylorInvSqrt(float4 r)
comp_16=`{
comp_17=`  return 1.79284291400159 - 0.85373472095314 * r;
comp_18=`}
comp_19=`
comp_20=`float snoise(float3 v)
comp_21=`  {
comp_22=`  const float2  C = float2(1.0/6.0, 1.0/3.0) ;
comp_23=`  const float4  D = float4(0.0, 0.5, 1.0, 2.0);
comp_24=`
comp_25=`  // First corner
comp_26=`  float3 i  = floor(v + dot(v, C.yyy) );
comp_27=`  float3 x0 =   v - i + dot(i, C.xxx) ;
comp_28=`
comp_29=`  // Other corners
comp_30=`  float3 g = step(x0.yzx, x0.xyz);
comp_31=`  float3 l = 1.0 - g;
comp_32=`  float3 i1 = min( g.xyz, l.zxy );
comp_33=`  float3 i2 = max( g.xyz, l.zxy );
comp_34=`
comp_35=`  //   x0 = x0 - 0.0 + 0.0 * C.xxx;
comp_36=`  //   x1 = x0 - i1  + 1.0 * C.xxx;
comp_37=`  //   x2 = x0 - i2  + 2.0 * C.xxx;
comp_38=`  //   x3 = x0 - 1.0 + 3.0 * C.xxx;
comp_39=`  float3 x1 = x0 - i1 + C.xxx;
comp_40=`  float3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y
comp_41=`  float3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y
comp_42=`
comp_43=`  // Permutations
comp_44=`  i = mod289(i);
comp_45=`  float4 p = permute( permute( permute(
comp_46=`             i.z + float4(0.0, i1.z, i2.z, 1.0 ))
comp_47=`           + i.y + float4(0.0, i1.y, i2.y, 1.0 ))
comp_48=`           + i.x + float4(0.0, i1.x, i2.x, 1.0 ));
comp_49=`
comp_50=`  // Gradients: 7x7 points over a square, mapped onto an octahedron.
comp_51=`  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)
comp_52=`  float n_ = 0.142857142857; // 1.0/7.0
comp_53=`  float3  ns = n_ * D.wyz - D.xzx;
comp_54=`
comp_55=`  float4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)
comp_56=`
comp_57=`  float4 x_ = floor(j * ns.z);
comp_58=`  float4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)
comp_59=`
comp_60=`  float4 x = x_ * ns.x + ns.yyyy;
comp_61=`  float4 y = y_ * ns.x + ns.yyyy;
comp_62=`  float4 h = 1.0 - abs(x) - abs(y);
comp_63=`
comp_64=`  float4 b0 = float4(x.xy, y.xy);
comp_65=`  float4 b1 = float4(x.zw, y.zw);
comp_66=`
comp_67=`  //float4 s0 = float4(lessThan(b0,0.0)) * 2.0 - 1.0;
comp_68=`  //float4 s1 = float4(lessThan(b1,0.0)) * 2.0 - 1.0;
comp_69=`  float4 s0 = floor(b0) * 2.0 + 1.0;
comp_70=`  float4 s1 = floor(b1) * 2.0 + 1.0;
comp_71=`  float4 sh = -step(h, float4(0.0));
comp_72=`
comp_73=`  float4 a0 = b0.xzyw + s0.xzyw * sh.xxyy ;
comp_74=`  float4 a1 = b1.xzyw + s1.xzyw * sh.zzww ;
comp_75=`
comp_76=`  float3 p0 = float3(a0.xy, h.x);
comp_77=`  float3 p1 = float3(a0.zw, h.y);
comp_78=`  float3 p2 = float3(a1.xy, h.z);
comp_79=`  float3 p3 = float3(a1.zw, h.w);
comp_80=`
comp_81=`//Normalise gradients
comp_82=`  float4 norm = taylorInvSqrt(float4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
comp_83=`  p0 *= norm.x;
comp_84=`  p1 *= norm.y;
comp_85=`  p2 *= norm.z;
comp_86=`  p3 *= norm.w;
comp_87=`
comp_88=`// Mix final noise value
comp_89=`  float4 m = max(0.6 - float4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
comp_90=`  m = m * m;
comp_91=`  return 42.0 * dot( m*m, float4( dot(p0,x0), dot(p1,x1),
comp_92=`                                dot(p2,x2), dot(p3,x3) ) );
comp_93=`  }
comp_94=`
comp_95=`float normnoise(float noise) {
comp_96=`	return 0.5*(noise+1.0);
comp_97=`}
comp_98=`
comp_99=`float clouds(float2 coords) {
comp_100=`    coords += float2(time*0.05, time*0.01);
comp_101=`
comp_102=`    float2 off1 = float2(50.0,33.0);
comp_103=`    float2 off2 = float2(0.0, 0.0);
comp_104=`    float2 off3 = float2(-300.0, 50.0);
comp_105=`    float2 off4 = float2(-100.0, 200.0);
comp_106=`    float2 off5 = float2(400.0, -200.0);
comp_107=`    float2 off6 = float2(100.0, -1000.0);
comp_108=`	  float scale1 = 3.0;
comp_109=`    float scale2 = 6.0;
comp_110=`    float scale3 = 12.0;
comp_111=`    float scale4 = 24.0;
comp_112=`    float scale5 = 48.0;
comp_113=`    float scale6 = 96.0;
comp_114=`    return normnoise(snoise(float3((coords+off1) * scale1, time * 0.5)) * 0.8 +
comp_115=`                     snoise(float3((coords+off2) * scale2, time * 0.4)) * 0.4 +
comp_116=`                     snoise(float3((coords+off3) * scale3, time * 0.1)) * 0.2 +
comp_117=`                     snoise(float3((coords+off4) * scale4, time * 0.7)) * 0.1 +
comp_118=`                     snoise(float3((coords+off5) * scale5, time * 0.2)) * 0.05 +
comp_119=`                     snoise(float3((coords+off6) * scale6, time * 0.3)) * 0.025);
comp_120=`}
comp_121=`
comp_122=`
comp_123=`shader_body
comp_124=`{
comp_125=`
comp_126=`
comp_127=`
comp_128=`    float2 center = float2(0.5, 0.5*(texsize.y/texsize.x));
comp_129=`
comp_130=`    float2 light1 = float2(sin(time*1.2+50.0)*1.0 + cos(time*0.4+10.0)*0.6,sin(time*1.2+100.0)*0.8 + cos(time*0.2+20.0)*-0.2)*0.2+center;
comp_131=`    float3 lightColor1 = float3(1.0, 0.3, 0.3);
comp_132=`
comp_133=`    float2 light2 = float2(sin(time+3.0)*-2.0,cos(time+7.0)*1.0)*0.2+center;
comp_134=`    float3 lightColor2 = float3(0.3, 1.0, 0.3);
comp_135=`
comp_136=`    float2 light3 = float2(sin(time+3.0)*2.0,cos(time+14.0)*-1.0)*0.2+center;
comp_137=`    float3 lightColor3 = float3(0.3, 0.3, 1.0);
comp_138=`
comp_139=`
comp_140=`    float cloudIntensity1 = 0.7*(1.0-(2.5*distance(uv, light1)));
comp_141=`    float lightIntensity1 = 1.0/(100.0*distance(uv,light1));
comp_142=`
comp_143=`    float cloudIntensity2 = 0.7*(1.0-(2.5*distance(uv, light2)));
comp_144=`    float lightIntensity2 = 1.0/(100.0*distance(uv,light2));
comp_145=`
comp_146=`    float cloudIntensity3 = 0.7*(1.0-(2.5*distance(uv, light3)));
comp_147=`    float lightIntensity3 = 1.0/(100.0*distance(uv,light3));
comp_148=`
comp_149=`
comp_150=`	  ret.xyz = cloudIntensity1 * clouds(uv) * lightColor1 + lightIntensity1 * lightColor1 +
comp_151=`              cloudIntensity2 * clouds(uv) * lightColor2 + lightIntensity2 * lightColor2 +
comp_152=`              cloudIntensity3 * clouds(uv) * lightColor3 + lightIntensity3 * lightColor3;
comp_153=`}
